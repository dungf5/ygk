{#
This file is part of EC-CUBE

Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.

http://www.ec-cube.co.jp/

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}
{% extends 'default_frame.twig' %}
{% form_theme form 'Form/form_div_layout.twig' %}

{% block javascript %}
<script src="{{ asset('assets/selectbox/jquery-ui_1_13_2.js') }}"></script>
<script>
$( function() {
    $.widget( "custom.combobox", {
        _create: function() {
            this.wrapper    = $( "<span>" )
            .addClass( "custom-combobox" )
            .insertAfter( this.element );

            this.element.hide();
            this._createAutocomplete();
            this._createShowAllButton();
        },

        _createAutocomplete: function() {
            var selected    = this.element.children( ":selected" ),
            value           = selected.val() ? selected.text() : "";

            this.input      = $( "<input>" )
            .appendTo( this.wrapper )
            .val( value )
            .attr( "title", "" )
            .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left select" )
            .autocomplete({
                delay: 0,
                minLength: 0,
                source: this._source.bind( this )
            })
            .tooltip({
                classes: {
                    "ui-tooltip": "ui-state-highlight"
                }
            });

            this._on( this.input, {
                autocompleteselect: function( event, ui ) {
                    ui.item.option.selected                 = true;

                    //shipping_destination_right shipping_radio_is_shipping_code
                    let shipping_radio_is_shipping_code     =  $(this.input).parent().parent().attr("class");

                    if (shipping_radio_is_shipping_code == "shipping_destination_right") {
                        updateShipingAddress(ui.item.option.value);

                        // Khi shipping_code change thì update otodoke_code laị về rỗng. Vì otodoke_code phụ thuộc vào shipping_code
                        updateDeliverydAdress('');

                        //Update Cart
                        handleChangeShippingCode(ui.item.option.value);
                    }
                    else {
                        updateDeliverydAdress(ui.item.option.value);
                    }

                    this._trigger( "select", event, {
                        item: ui.item.option
                    });
                },

                autocompletechange: "_removeIfInvalid"
            });
        },

        _createShowAllButton: function() {
            var input       = this.input,
            wasOpen         = false;

            input.on( "focusout", function(objI) {
                if (this.value == "") {
                    //$('.delivery_address_main').html('');
                    let clasCheck   = $(this).parent().parent().attr("class");

                    if (clasCheck == 'shipping_destination_right combo_add_list') {
                        //  $('.combo_add_list').html('');
                        $("select[name='delivery_address']").val('');
                    }
                    else {
                        $('.error_delivery_address').hide();
                        let Temp    = '<span class="custom-combobox"><input title="" class="custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left ui-autocomplete-input select" autocomplete="off" data-dashlane-rid="c17f3366f0c61f3d" data-form-type="other"><a tabindex="-1" title="すべて表示" class="ui-button ui-widget ui-button-icon-only custom-combobox-toggle ui-corner-right" role="button" data-dashlane-label="true" data-dashlane-rid="a9ea447d28e61422" data-form-type="other"><span class="ui-button-icon ui-icon ui-icon-triangle-1-s"></span><span class="ui-button-icon-space"> </span></a></span>';

                        $('.combo_add_list').html(Temp);
                        $("select[name='shipping_radio']").val('');
                    }
                }
            });

            $( "<a>" )
            .attr( "tabIndex", -1 )
            .attr( "title", "すべて表示" )
            .tooltip()
            .appendTo( this.wrapper )
            .button({
                icons: {
                    primary: "ui-icon-triangle-1-s"
                },
                text: false
            })
            .removeClass( "ui-corner-all" )
            .addClass( "custom-combobox-toggle ui-corner-right" )
            .on( "mousedown", function() {
                wasOpen = input.autocomplete( "widget" ).is( ":visible" );
            })
            .on( "click", function() {
                input.trigger( "focus" );

                // Close if already visible
                if ( wasOpen ) {
                    return;
                }

                // Pass empty string as value to search for, displaying all results
                input.autocomplete( "search", "" );
            });
        },

        _source: function( request, response ) {
            var matcher         = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );

            response( this.element.children( "option" ).map(function() {
                var value2      = $( this ).val()
                var text        = $( this ).text();

                if (this.value && ( !request.term || matcher.test(text) || matcher.test(value2)))
                return {
                    label: text,
                    value: text,
                    option: this
                };
            }));
        },

        _removeIfInvalid: function( event, ui ) {
            // Selected an item, nothing to do
            if ( ui.item ) {
                return;
            }

            // Search for a match (case-insensitive)
            var value           = this.input.val(),
            valueLowerCase      = value.toLowerCase(),
            valid               = false;

            this.element.children( "option" ).each(function() {
                if ($( this ).text().toLowerCase() === valueLowerCase) {
                    this.selected = valid = true;
                    return false;
                }
            });

            // Found a match, nothing to do
            if (valid) {
                return;
            }

            // Remove invalid value
            this.input
            .val( "" )
            .attr( "title", value + " お届け先が不在でございます。" )
            .tooltip( "open" );

            this.element.val( "" );
            this._delay(function() {
                this.input.tooltip( "close" ).attr( "title", "" );
            }, 500 );

            this.input.autocomplete( "instance" ).term = "";
        },

        _destroy: function() {
            this.wrapper.remove();
            this.element.show();
        }
    });

    $( "#shipping_radio" ).combobox({});
});
</script>

<script>
$(function () {
    var $redirectCallback = function () {
        loadingOverlay();
        $('#shopping_order_redirect_to').val($(this).attr('data-path'));
        $('#shopping-form').attr('action', '{{ url("shopping_redirect_to") }}').submit();

        setTimeout(function () {
            loadingOverlay("hide");
        }, 2000);
    };

    $('[data-trigger]').each(function() {
        $(this).on($(this).attr('data-trigger'), $redirectCallback);
    });

    {% if is_granted('ROLE_USER') == false %}
        var edit            = $('.customer-edit');
        var hidden          = $('.customer-in');
        var form            = $('.customer-form');

        $('#customer').click(function() {
            $(edit).each(function(index) {
                var name    = $(this).text();
                var input   = $('<input id="edit' + index + '" type="text" />').val(name);
                $(form[index]).empty().append(input);
            });

            $('.non-customer-display').hide();
            $('.non-customer-edit').show();
            $('.mod-button').show();
        });

        $('#customer-ok').click(function() {
            $(form).each(function(index) {
                $(hidden[index]).val($(form[index]).children('input').val());
            });

            var postData        = {};
            $(hidden).each(function() {
                postData[$(this).attr('name')] = $(this).val();
            });

            loadingOverlay();

            $.ajax({
                url: "{{ url('shopping_customer') }}",
                type: 'POST',
                data: postData,
                dataType: 'json'
            })
            .done(function(data) {
                if (data.status == 'OK') {
                        $(form).each(function(index) {
                        $(edit[index]).empty().text($(form[index]).children('input').val());
                        $(form[index]).empty();
                    });

                    // kana field
                    $(edit[2]).empty().text(data.kana01);
                    $(edit[3]).empty().text(data.kana02);
                    $('#customer-kana01').val(data.kana01);
                    $('#customer-kana02').val(data.kana02);
                }
            })
            .fail(function() {
                alert('更新に失敗しました。入力内容を確認してください。');
            })
            .always(function(data) {
                // overlayを無効
                loadingOverlay('hide');
            });

            $('.non-customer-display').show();
            $('.non-customer-edit').hide();
            $('.mod-button').hide();
        });

        $('#customer-cancel').click(function() {
            $('.non-customer-display').show();
            $('.non-customer-edit').hide();
            $('.mod-button').hide();
        });
    {% endif %}

    //nvtrong ajax
    $('.mySubmitConfirm').click(function() {
        let isSubmit                = 1;
        let valbill_address         = $("select[name='bill_address']").val();
        let valbill_addressInput    = $("input[name='bill_address']").val();//leng =1
        let ishow2_addressInputOk   = 0;

        if (valbill_addressInput!=null || valbill_addressInput!='' ) {
            ishow2_addressInputOk=1;
        }

        if (ishow2_addressInputOk == 0) {
            if ( (valbill_address==null || valbill_address=='' )) {
                $('.error_bill_address').show();
                isSubmit            = 0;
            }
            else {
                $('.error_bill_address').hide();
            }
        }

        let shipRadioVal            = $("input[name='shipping_radio']").val();//leng =1
        let isShipNoOk              = 0;

        if (shipRadioVal != null) {
            isShipNoOk=1;
        }

        if (isShipNoOk == 0) {
            let valShip             = $("select[name='shipping_radio']").val();

            if ( valShip == null || valShip== "") {
                isSubmit            = 0;
                $('.errorshipping_radio').show();
            }
            else {
                $('.errorshipping_radio').hide();
            }
        }
        else {
            $('.errorshipping_radio').hide();
        }


        let deliveryRadioVal        = $("input[name='delivery_address']").val();//leng =1
        let isDeliveryOk            = 0;

        if (deliveryRadioVal != null) {
            isDeliveryOk=1;
        }

        if (isDeliveryOk == 0) {
            let valdelivery_address = $("select[name='delivery_address']").val();

            if (valdelivery_address == null || valdelivery_address == '') {
                $('.error_delivery_address').show();
                isSubmit            = 0;
            }
            else {
                $('.error_delivery_address').hide();
            }
        }
        else {
            $('.error_delivery_address').hide();
        }

        if (checkDate() && isSubmit === 1) {
            $('#shopping-form').submit();
        }
    });
    //end validate sumit

    //delivery_address is otoke_code delivery_address_main
    $('.combo_add_list').delegate("select[name='delivery_address']", 'change', function() {
        let delivery_code       = $(this).val();

        //delivery_address is otoke_code
        updateDeliverydAdress(delivery_code);
    });

    $('.bill_address').delegate("select[name='bill_address']", 'change', function() {
        let bill_code           =  $(this).val();

        updateBillAddress(bill_code);
        $('.error_bill_address').hide();
    });

    $("select[name='shipping_radio']").change(function() {
        let shipping_code       =  $(this).val();
        updateShipingAddress(shipping_code);
    });

    {% if Order.dtBillSeikyuCode|length == 1 %}
        updateBillAddress('{{ Order.dtBillSeikyuCode[0]["seikyu_code"] }}');
    {% endif %}

    {% if Order.mstShips|length == 1 %}
        updateShipingAddress('{{ Order.mstShips[0]["shipping_code"] }}');
    {% endif %}
});

function updateShipingAddress(shipping_code) {
    $('.error_delivery_address').hide();
    $('.errorshipping_radio').hide();

    $.ajax({
        url: '{{ url('cart_save_temp') }}',
        type: 'POST',
        data: {
            shipping_code:shipping_code ,
            '_token':'{{ csrf_token('_token') }}',
            'pre_order_id':'{{ Order.pre_order_id }}',
            'customer_id':'{{ Order.Customer.id }}'
        }
    })
    .done(function(htmlRe, statusText, jqXHR) {
        // delivery_address_main
        $('.combo_add_list').html(htmlRe);
    })
    .fail(function(jqXHR, statusText, errorThrown) {
    });
}

function updateBillAddress(bill_code) {
    $.ajax({
        url: '{{ url('cart_save_temp_order') }}',
        type: 'POST',
        data: {
            'bill_code': bill_code,
            '_token':'{{ csrf_token('_token') }}',
            'pre_order_id':'{{ Order.pre_order_id }}',
            'customer_id':'{{ Order.Customer.id }}'
        }
    })
    .done(function(htmlRe, statusText, jqXHR) {
    })
    .fail(function(jqXHR, statusText, errorThrown) {
    });
}

function updateDeliverydAdress(delivery_code) {
    $.ajax({
        url: '{{ url('cart_save_temp_order') }}',
        type: 'POST',
        data: {
            'delivery_code': delivery_code,
            '_token':'{{ csrf_token('_token') }}',
            'pre_order_id':'{{ Order.pre_order_id }}',
            'customer_id':'{{ Order.Customer.id }}'
        }
    }).done(function(htmlRe, statusText, jqXHR) {

    }).fail(function(jqXHR, statusText, errorThrown) {

    });
}

{% if Order.shipping_no_checked !=""  %}
    updateShipingAddress("{{Order.shipping_no_checked}}");
{% endif %}

//update one item xxxxx
{% if Order.mstShips|length == 1 %}
    updateShipingAddress("{{ Order.mstShips[0]["shipping_no"] }}");
{% endif %}
</script>

<script src="{{ asset('assets/js/vendor/moment.min.js', 'admin') }}"></script>
<script src="{{ asset('assets/js/vendor/moment-with-locales.min.js', 'admin') }}"></script>
<script src="{{ asset('assets/js/vendor/tempusdominus-bootstrap-4.min.js', 'admin') }}"></script>

<script>
    Date.isLeapYear = function (year) {
        return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));
    };

    Date.getDaysInMonth = function (year, month) {
        return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
    };

    Date.prototype.isLeapYear = function () {
        return Date.isLeapYear(this.getFullYear());
    };

    Date.prototype.getDaysInMonth = function () {
        return Date.getDaysInMonth(this.getFullYear(), this.getMonth());
    };

    Date.prototype.addMonths = function (value) {
        var n   = this.getDate();
        this.setDate(1);
        this.setMonth(this.getMonth() + value);
        this.setDate(Math.min(n, this.getDaysInMonth()));
        return this;
    };

    function checkDate() {
        $('.error_date').html('');

        let msErSame        = "{{ 'front.shopping.shipping_date_err_same'|trans }}";//same error_date
        let msErSmal        =  "{{ 'front.shopping.shipping_date_err_small'|trans }}";//smaller
        let msErMonth       =  "{{ 'front.shopping.shipping_date_err_month'|trans }}";//>1month
        let date1Str        = $('#date_picker_delivery').val();

        if (date1Str.trim() == '') {
            return  true;
        }

        let inputDateStr    = date1Str;
        let curDate         = new Date();
        curDate.setHours(0, 0, 0, 0);
        let inputDate       = new Date(inputDateStr);
        inputDate.setHours(0, 0, 0, 0);

        // if (curDate.toString() == inputDate.toString()) {
        //     $('#date_picker_delivery').focus();
        //     $('.error_date').html(msErSame);
        //
        //     return false;
        // }

        if (inputDate < curDate) {
            $('.error_date').html(msErSmal);

            return false;
        }

        curDate.addMonths(1);

        if (inputDate > curDate) {
            $('.error_date').html(msErMonth);

            return false;
        }

        return true;
    }

    var CUR_INPUT_DATE      = null;
    $( document ).ready(function() {
        var maxDate         = "{{ getNext3Month() }}";
        var minDate         = "{{ getMinDate() }}";
        let defaultDate     = '';

        {% if Order.hasMoreOrder == 1 %}
            defaultDate     = '{{ Order.moreOrder.date_want_delivery }}';
        {% endif %}

        $('#date_picker_delivery').datetimepicker({
            locale: 'ja',
            format: 'YYYY-MM-DD',
            useCurrent: false,
            maxDate: maxDate,
            minDate: minDate,
            defaultDate:defaultDate,
            useStrict: true,
            keepInvalid: true,
            buttons: {
            showToday: true,
            showClose: true
            }
        });

        $("#date_picker_delivery").on("keyup.datetimepicker", function (e) {
            checkDate()
        });

        $("#date_picker_delivery").on("hide.datetimepicker", function (e) {
            checkDate()
        });

        function dateIsValid(dateStr) {
            const regex         = /^\d{4}-\d{2}-\d{2}$/;

            if (dateStr.match(regex) === null) {
                return false;
            }

            const date          = new Date(dateStr);
            const timestamp     = date.getTime();

            if (typeof timestamp !== 'number' || Number.isNaN(timestamp)) {
                return false;
            }

            return date.toISOString().startsWith(dateStr);
        }

        $("#date_picker_delivery").on("change.datetimepicker", function (e) {
            if (e.date != undefined) {
                let dateChoose  = e.date.format('YYYY-MM-DD');

                if (checkDate()) {
                    updateDateDeli(dateChoose);
                }
            }
        });


        if (!isEmpty($("#customer_order_no").val())) {
            handleCheckOrderNoExisted($("#customer_order_no").val());
        }
    });

    function updateDateDeli(dateChoose) {
        let htmlRe1 = '';
        $('.error_date').html('');

        $.ajax({
            url: '{{ url('cart_save_temp_order') }}',
            type: 'POST',
            async:false,
            data: {
                'date_want_delivery': dateChoose,
                'pre_order_id':'{{ Order.pre_order_id }}',
                'customer_id':'{{ Order.Customer.id }}'
            }
        })
        .done(function(htmlRe, statusText, jqXHR) {
            htmlRe1 = htmlRe;
        })
        .fail(function(jqXHR, statusText, errorThrown) {

        });

        $("#date_picker_delivery").val(htmlRe1.date_want_delivery);

        if (htmlRe1.is_ok == 0) {
            $('.error_date').html(htmlRe1.msg);
        }
    }
</script>

<script>
    $(function () {
        let preOrderId = "{{Order.pre_order_id }}";

        $.ajax({
            url: '{{ url('cart_save_temp') }}',
            type: 'POST',
            data: {
                pre_order_id: preOrderId,
                is_check_exist: 1,
                '_token':'{{ csrf_token('_token') }}'
            }
        })
        .done(function(htmlRe, statusText, jqXHR) {
           if (htmlRe == "0") {
               window.location.href='/';
           }
        })
        .fail(function(jqXHR, statusText, errorThrown) {

         });
    });

    var typingRemarksTimer;
    var doneTypingInterval      = 2000;
    function updateTempOrder(target) {
        $("button.mySubmitConfirm").prop("disabled", true);
        let name                = target['name'];
        let value               = target['value'];

        clearTimeout(typingRemarksTimer);
        loadingOverlay('hide');

        typingRemarksTimer      = setTimeout(function () {
            handelUpdateTempOrder(name, value);
        }, doneTypingInterval);
    }

    function checkOrderNoExisted(target) {
        let name                = target['name'];
        let value               = target['value'];

        clearTimeout(typingRemarksTimer);

        typingRemarksTimer      = setTimeout(function () {
            handleCheckOrderNoExisted(value);
        }, 1000);
    }

    function handelUpdateTempOrder(name, value) {
        loadingOverlay();
        let remarks1    = $("input[name=remarks1]").val();
        let remarks2    = $("input[name=remarks2]").val();
        let remarks3    = $("input[name=remarks3]").val();
        let remarks4    = $("input[name=remarks4]").val();
        let customer_order_no    = $("input[name=customer_order_no]").val();

        if (name == 'remarks1') remarks1    = value;
        if (name == 'remarks2') remarks2    = value;
        if (name == 'remarks3') remarks3    = value;
        if (name == 'remarks4') remarks4    = value;
        if (name == 'customer_order_no') customer_order_no    = value;

        $.ajax({
            url: '{{ url('cart_save_temp_order') }}',
            type: 'POST',
            async:false,
            data: {
                'remarks1': remarks1,
                'remarks2': remarks2,
                'remarks3': remarks3,
                'remarks4': remarks4,
                'customer_order_no': customer_order_no,
                'pre_order_id':'{{ Order.pre_order_id }}',
                'customer_id':'{{ Order.Customer.id }}'
            }
        })
        .done(function(htmlRe, statusText, jqXHR) {

        })
        .fail(function(jqXHR, statusText, errorThrown) {

        })
        .always(function() {
            loadingOverlay('hide');
            $("button.mySubmitConfirm").prop("disabled", false);
        });
    }

    function handleCheckOrderNoExisted(value) {
    $.ajax({
        url: '{{ url('check_order_existed') }}',
        type: 'POST',
        data: {
            customer_order_no:value,
            '_token':'{{ csrf_token('_token') }}',
        }
    })
    .done(function(data) {
        if (data.status == 1) {
            $(".error_customer_order_no").css('display', 'initial');
        } else {
            $(".error_customer_order_no").css('display', 'none');
        }
    });
}
</script>
{% endblock javascript %}

{% block main %}
    <link rel="stylesheet" href="{{ asset('assets/selectbox/jquery_ui_1_13_2.css') }}">
    <style>
        .standar_price {
            color: #00B050;
            font-size: 100% !important;
        }

        .good_price {
            color: #FF0000;
            font-size: 100% !important;
        }

        .custom-combobox {
            position: relative;
            display: inline-block;
        }

        .custom-combobox-toggle {
            position: absolute;
            top: 0;
            bottom: 0;
            margin-left: -1px;
            padding: 0;
        }

        .custom-combobox-input {
            margin: 0;
            padding: 5px 10px;
            width: 500px;
        }

        .ui-draggable, .ui-droppable {
            background-position: top;
        }
    </style>

    <style type="text/css">
        .datepicker-days th.dow:first-child,
        .datepicker-days td:first-child {
            color: #f00;
        }

        .disabled {
            background: gray !important;
            color: rgba(0, 0, 0, 0.84) !important;
        }

        .datepicker-days th.dow:last-child,
        .datepicker-days td:last-child {
            color: #00f;
        }

        .delivery_address_main {
            padding-top: 15px;
        }

        select:required:invalid {
            color: #666;
        }

        option[value=""][disabled] {
            display: none;
        }

        option {
            color: #000;
        }
    </style>

    <div class="ec-role">
        <div class="ec-pageHeader">
            <h1>{{ 'front.shopping.title'|trans }}</h1>
        </div>
    </div>

    <div class="ec-cartRole">
        <div class="ec-cartRole__progress">
            <ul class="ec-progress">
                {% set step = 1 %}
                <li class="ec-progress__item">
                    <div class="ec-progress__number">{{ step }}{% set step = step + 1 %}
                    </div>
                    <div class="ec-progress__label">{{ 'front.cart.nav__cart_items'|trans }}
                    </div>
                </li>
                {% if is_granted('ROLE_USER') == false %}
                    <li class="ec-progress__item">
                        <div class="ec-progress__number">{{ step }}{% set step = step + 1 %}
                        </div>
                        <div class="ec-progress__label">{{ 'front.cart.nav__customer_info'|trans }}
                        </div>
                    </li>
                {% endif %}
                <li class="ec-progress__item is-complete">
                    <div class="ec-progress__number">{{ step }}{% set step = step + 1 %}
                    </div>
                    <div class="ec-progress__label">{{ 'front.cart.nav__order'|trans }}
                    </div>
                </li>
                <li class="ec-progress__item">
                    <div class="ec-progress__number">{{ step }}{% set step = step + 1 %}
                    </div>
                    <div class="ec-progress__label">{{ 'front.cart.nav__confirm'|trans }}
                    </div>
                </li>
                <li class="ec-progress__item">
                    <div class="ec-progress__number">{{ step }}{% set step = step + 1 %}
                    </div>
                    <div class="ec-progress__label">{{ 'front.cart.nav__complete'|trans }}
                    </div>
                </li>
            </ul>
        </div>

        <!-- アラートメッセージ -->
        {{ include('Shopping/alert.twig') }}
    </div>

    <form id="shopping-form" method="post" action="{{ url('shopping_confirm') }}">
        {{ form_widget(form._token) }}
        {{ form_widget(form.redirect_to) }}
        <div class="ec-orderRole">
            <div class="ec-orderRole__detail">
                <div class="ec-orderAccount hidden nvtrong">
                    <div class="ec-rectHeading">
                        <h2>{{ 'front.shopping.customer_info'|trans }}</h2>
                    </div>
                    {% if is_granted('ROLE_USER') == false %}
                        <div class="ec-orderAccount__change non-customer-display">
                            <button id="customer" class="ec-inlineBtn"
                                    type="button">{{ 'common.change'|trans }}</button>
                        </div>
                    {% endif %}
                    <div class="ec-orderAccount__account non-customer-display">
                        <p class="ec-halfInput">{{ 'common.name.prefix'|trans }}<span
                                class="customer-edit customer-name01">{{ Order.name01 }}</span> <span
                                class="customer-edit customer-name02">{{ Order.name02 }}</span>{{ 'common.name.suffix'|trans }}
                        </p>
                        <p class="ec-halfInput"><span class="customer-edit customer-kana01">{{ Order.kana01 }}</span>
                            <span class="customer-edit customer-kana02">{{ Order.kana02 }}</span></p>
                        <p class="ec-input"><span
                                class="customer-edit customer-company_name">{{ Order.companyName }}</span></p>
                        <p class="ec-zipInput">〒<span
                                class="customer-edit customer-postal_code">{{ Order.postal_code }}</span></p>
                        <p class="ec-input"><span class="customer-edit customer-pref">{{ Order.pref }}</span><span
                                class="customer-edit customer-addr01">{{ Order.addr01 }}</span><span
                                class="customer-edit customer-addr02">{{ Order.addr02 }}</span>

                        </p>
                        <p class="ec-telInput"><span
                                class="customer-edit customer-phone_number">{{ Order.phone_number }}</span></p>
                        <p class="ec-input"><span class="customer-edit customer-email">{{ Order.email }}</span></p>
                    </div>
                    {% if is_granted('ROLE_USER') == false %}
                        <div class="ec-borderedDefs  non-customer-edit" style="display:none;">
                            <dl>
                                <dt>
                                    <label class="ec-label required">{{ 'common.name'|trans }}</label>
                                    <span class="ec-required">{{ 'common.required'|trans }}</span>
                                </dt>
                                <dd>
                                    <div class="ec-halfInput">
                                        <span class="customer-form customer-name01"></span>
                                        <span class="customer-form customer-name02"></span>
                                    </div>
                                </dd>
                            </dl>
                            <dl>
                                <dt>
                                    <label class="ec-label required">{{ 'common.kana'|trans }}</label>
                                    <span class="ec-required">{{ 'common.required'|trans }}</span>
                                </dt>
                                <dd>
                                    <div class="ec-halfInput">
                                        <span class="customer-form customer-kana01"></span>
                                        <span class="customer-form customer-kana02"></span>
                                    </div>
                                </dd>
                            </dl>
                            <dl>
                                <dt>
                                    <label class="ec-label"
                                           for="nonmember_company_name">{{ 'common.company_name'|trans }}</label>
                                </dt>
                                <dd>
                                    <div class="ec-halfInput">
                                        <span class="customer-form customer-company_name"></span>
                                    </div>
                                </dd>
                            </dl>
                            <dl>
                                <dt>
                                    <label class="ec-label required">{{ 'common.address'|trans }}</label>
                                    <span class="ec-required">{{ 'common.required'|trans }}</span>
                                </dt>
                                <dd>
                                    <div class="ec-zipInput">
                                        <span>{{ 'common.postal_symbol'|trans }}</span>
                                        <span class="customer-form customer-postal_code"></span>
                                        <div class="ec-zipInputHelp">
                                            <div class="ec-zipInputHelp__icon">
                                                <div class="ec-icon">
                                                    <img src="{{ asset('assets/icon/question-white.svg') }}" alt="">
                                                </div>
                                            </div>
                                            <a href="https://www.post.japanpost.jp/zipcode/" target="_blank">
                                                <span>{{ 'common.search_postal_code'|trans }}</span>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="ec-select">
                                        <span class="customer-form customer-address_pref"></span>
                                    </div>
                                    <div class="ec-input">
                                        <span class="customer-form customer-address_addr01"></span>
                                    </div>
                                    <div class="ec-input">
                                        <span class="customer-form customer-address_addr02"></span>
                                    </div>
                                </dd>
                            </dl>
                            <dl>
                                <dt>
                                    <label class="ec-label required"
                                           for="nonmember_phone_number">{{ 'common.phone_number'|trans }}</label>
                                    <span class="ec-required">{{ 'common.required'|trans }}</span>
                                </dt>
                                <dd>
                                    <div class="ec-telInput">
                                        <span class="customer-form customer-phone_number"></span>
                                    </div>
                                </dd>
                            </dl>
                            <dl>
                                <dt>
                                    <label class="ec-label required">{{ 'common.mail_address'|trans }}</label>
                                    <span class="ec-required">{{ 'common.required'|trans }}</span>
                                </dt>
                                <dd>
                                    <div class="ec-input">
                                        <span class="customer-form customer-email"></span>
                                    </div>
                                </dd>
                            </dl>
                        </div>
                        <div class="mod-button" style="display:none;">
                            <span id="customer-ok"><button type="button" class="ec-inlineBtn">{{ 'common.ok'|trans }}</button></span>
                            <span id="customer-cancel"><button type="button" class="ec-inlineBtn">{{ 'common.cancel'|trans }}</button></span>
                        </div>
                        <input type="hidden" id="customer-name01" class="customer-in" name="customer_name01"
                               value="{{ Order.name01 }}">
                        <input type="hidden" id="customer-name02" class="customer-in" name="customer_name02"
                               value="{{ Order.name02 }}">
                        <input type="hidden" id="customer-kana01" class="customer-in" name="customer_kana01"
                               value="{{ Order.kana01 }}">
                        <input type="hidden" id="customer-kana02" class="customer-in" name="customer_kana02"
                               value="{{ Order.kana02 }}">
                        <input type="hidden" id="customer-company-name" class="customer-in" name="customer_company_name"
                               value="{{ Order.companyName }}">
                        <input type="hidden" id="customer-postal_code" class="customer-in" name="customer_postal_code"
                               value="{{ Order.postal_code }}">
                        <input type="hidden" id="customer-pref" class="customer-in" name="customer_pref"
                               value="{{ Order.pref }}">
                        <input type="hidden" id="customer-addr01" class="customer-in" name="customer_addr01"
                               value="{{ Order.addr01 }}">
                        <input type="hidden" id="customer-addr02" class="customer-in" name="customer_addr02"
                               value="{{ Order.addr02 }}">
                        <input type="hidden" id="customer-phone_number" class="customer-in" name="customer_phone_number"
                               value="{{ Order.phone_number }}">
                        <input type="hidden" id="customer-email" class="customer-in" name="customer_email"
                               value="{{ Order.email }}">
                    {% endif %}
                </div>
                <div class="ec-orderDelivery ">
                    <div class="ec-rectHeading  nvtrong hidden">
                        <h2>{{ 'front.shopping.delivery_info'|trans }}</h2>
                    </div>

                    {% for shipping in Order.shippings %}
                        {% set idx = loop.index0 %}
                        {% set isShowReducedTaxMess = false %}
                        <div class="ec-orderDelivery__item">
                            <ul class="ec-borderedList">
                                {% for orderItem in shipping.productOrderItems %}
                                    {% set MstProduct = hsProductId[orderItem.Product.id] %}
                                    {% set classShow=hsMstProductCodeCheckShow[MstProduct.product_code] -%}
                                    <li>
                                        <div class="ec-imageGrid">
                                            <div class="ec-imageGrid__img"><img
                                                    src="{{ asset((orderItem.product is null ? null : orderItem.product.MainListImage)|no_image_product, 'save_image') }}"
                                                    alt="{{ MstProduct.product_name }}"></div>
                                            <div class="ec-imageGrid__content">
                                                {{ MstProduct.jan_code}}
                                                <p>{{ MstProduct.product_name }}</p>

                                                {% if orderItem.productClass is not null and orderItem.productClass.classCategory1 %}
                                                    {{ orderItem.productClass.classCategory1.className.name }}：{{ orderItem.productClass.classCategory1 }}
                                                {% endif %}
                                                {% if orderItem.productClass is not null and orderItem.productClass.classCategory2 %}
                                                    {{ orderItem.productClass.classCategory2.className.name }}：{{ orderItem.productClass.classCategory2 }}
                                                {% endif %}

                                                {# Check mst_customer.price_view_flg #}
                                                {% if global_service.getPriceViewFlg %}
                                                    <span class="{{ classShow }}">
                                                        {{ roundPriceZero(orderItem.priceIncTax,classShow) | raw }}
                                                    </span>
                                                    ×
                                                {% endif %}

                                                {{ orderItem.quantity|number_format }}
                                                {% if MstProduct.quantity > 1 %}
                                                    箱({{ orderItem.quantity*MstProduct.quantity }}個)
                                                {% else %}
                                                    個
                                                {% endif %}

                                                {# Check mst_customer.price_view_flg #}
                                                {% if global_service.getPriceViewFlg %}
                                                    {{ 'common.subtotal__with_separator'|trans }}{{ roundPriceZeroTotal(orderItem.totalPrice) | raw }}
                                                {% endif %}
                                            </div>
                                        </div>
                                    </li>
                                {% endfor %}
                            </ul>
                        </div>

                        <div class="ec-orderDelivery__address nvtrong hidden">
                            <p>{{ 'common.name.prefix'|trans }}{{ shipping.name01 }} {{ shipping.name02 }}
                                ({{ shipping.kana01 }} {{ shipping.kana02 }}){{ 'common.name.suffix'|trans }}</p>
                            <p>{{ 'common.postal_symbol'|trans }}{{ shipping.postal_code }} {{ shipping.pref }}{{ shipping.addr01 }}{{ shipping.addr02 }}</p>
                            <p>{{ shipping.phone_number }}</p>
                        </div>
                        <div class="ec-orderDelivery__actions nvtrong hidden ">
                            <div class="ec-selects">
                                <div class="ec-select">
                                    <label>{{ 'front.shopping.delivery_provider'|trans }}</label>
                                    {{ form_widget(form.Shippings[idx].Delivery, { 'attr': { 'class': 'form-control', 'data-trigger': 'change' }}) }}
                                    {{ form_errors(form.Shippings[idx].Delivery) }}
                                </div>
                                <div class="ec-select ec-select__delivery">
                                    <label>{{ 'front.shopping.delivery_date'|trans }}</label>
                                    {{ form_widget(form.Shippings[idx].shipping_delivery_date, {'attr': {'class': 'form-control'}}) }}
                                    {{ form_errors(form.Shippings[idx].shipping_delivery_date) }}
                                </div>
                                <div class="ec-select ec-select__time">
                                    <label>{{ 'front.shopping.delivery_time'|trans }}</label>
                                    {{ form_widget(form.Shippings[idx].DeliveryTime, {'attr': {'class': 'form-control'}}) }}
                                    {{ form_errors(form.Shippings[idx].DeliveryTime) }}
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                    <div class="ec-orderDelivery__edit nvtrong hidden">
                        <button type="button" class="ec-inlineBtn" data-trigger="click"
                                data-path="{{ path('shopping_shipping_multiple') }}">{{ 'front.shopping.to_multiple'|trans }}</button>
                    </div>
                </div>

                {#                nvtrong start #}
                <style>
                    .shipping_destination {
                        display: flex;
                    }

                    .shipping_destination_left {
                        width: 140px
                    }

                    .shipping_destination_left > div {
                        width: 130px;
                        background-color: #c9b5b5;
                        text-align: center;
                        margin-right: 20px;
                    }

                    .shipping_destination_right,
                    .shipping_destination_right > .custom-combobox {
                        width: 100%;
                    }

                    .shipping_destination_right > .custom-combobox > .custom-combobox-input {
                        width: calc(100% - 30px);
                    }

                    .shipping_destination_right .datetimepicker-input {
                        max-width: 10vw;
                    }

                    .shipping_row {
                        display: block;
                    }

                    .shipping_col1 {
                        /*width: 150px;*/
                    }

                    .shipping_col2 {
                        /*width: 350px;*/
                    }

                    .date_picker_row {
                        display: flex;
                        margin-top: 10px;
                    }
                    .date-picker-delivery-notify {
                        padding: 5px 0;
                    }
                    .ui-autocomplete-input.select {
                        position: relative;
                        align-items: center;
                        height: 30px;
                        border-radius: 5px;
                        border: 1px solid #ccc;
                        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
                        margin: 0;
                        padding: 0;
                        color: #525263;
                    }
                    .shipping_radio_is_shipping_code {
                        position: relative;
                        align-items: center;
                        max-width: 26vw;
                        height: 30px;
                        border-radius: 5px;
                        border: 1px solid #ccc;
                        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
                        margin: 0;
                        padding: 0;
                    }
                </style>

                <div class="ec-orderAccount shipping_destination ">
                    <div class="shipping_destination_left">
                        <div>お客様情報</div>
                    </div>
                    <div class="shipping_destination_right">
                        <div class="shipping_row">
                            <div class="shipping_col1 Order.name01 Order.name02">
                                {{ Order.arCusLogin.company_name }}
                            </div>
                            <div class="shipping_row">

                                〒 {{ Order.arCusLogin.postal_code }}

                                {{ Order.arCusLogin.addr01 }}
                                {{ Order.arCusLogin.addr02 }}
                                {{ Order.arCusLogin.addr03 }}
                            </div>

                        </div>
                    </div>
                </div>
                <p class="error_bill_address" style="color: red;font-size: larger;font-weight: bold;display: none">
                    {{ 'front.shopping.error_bill_address'|trans }}
                </p>
                <div style="margin-bottom: 30px;"></div>

                <div class="shipping_destination">
                    <div class="shipping_destination_left">
                        <div>出荷先</div>
                    </div>
                    <div class="shipping_destination_right">

                        {% if Order.mstShips|length == 1 %}
                            <div class="shipping_row">
                                <div class="shipping_col1">
                                    <span>
                                        {% if Order.mstShips|length == 1 %}
                                            <input type="radio" class="hidden" checked name="shipping_radio"
                                                   value="{{ Order.mstShips[0]["shipping_no"] }}"
                                                   id="{{ Order.mstShips[0]["shipping_no"] }}">

                                        {% endif %}
                                    </span>
                                    {{ Order.mstShips[0]["name01"] }}
                                </div>
                                <div class="shipping_col2">
                                    〒 {{ Order.mstShips[0]["postal_code"] }} {{ Order.mstShips[0]["addr01"] }} {{ Order.mstShips[0]["addr02"] }} {{ Order.mstShips[0]["addr03"] }}
                                </div>
                            </div>
                        {% else %}
                            <select id="shipping_radio" style="width: 555px" name="shipping_radio">
                                <option disabled selected value=""> {{ 'front.shopping.select_one_shipping_radio'|trans }}</option>
                                {% for arShipping in Order.mstShips %}
                                    {% if Order.shipping_no_checked ==  arShipping["shipping_no"] %}
                                        <option selected value="{{ arShipping["shipping_no"] }}">{{ arShipping["name01"] }} 〒 {{ arShipping["postal_code"] }} {{ arShipping["addr01"] }} {{ arShipping["addr02"] }} {{ arShipping["addr03"] }}</option>
                                    {% else %}
                                        <option value="{{ arShipping["shipping_no"] }}">{{ arShipping["name01"] }}〒 {{ arShipping["postal_code"] }} {{ arShipping["addr01"] }} {{ arShipping["addr02"] }} {{ arShipping["addr03"] }}</option>
                                    {% endif %}
                                {% endfor %}
                            </select>
                        {% endif %}
                    </div>
                </div>
                <p class="errorshipping_radio" style="color: red;font-size: larger;font-weight: bold;display: none">
                    {{ 'front.shopping.shipping_title_error'|trans }}
                </p>

                <div class="delivery_address_main">
                    <div class="delivery_address shipping_destination">
                        <div class="shipping_destination_left">
                            <div>届け先 </div>
                        </div>
                        <div class="shipping_destination_right combo_add_list">
                            <span class="custom-combobox"><input title="" class="custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left ui-autocomplete-input select" autocomplete="off" data-dashlane-rid="c17f3366f0c61f3d" data-form-type="other"><a tabindex="-1" title="すべて表示" class="ui-button ui-widget ui-button-icon-only custom-combobox-toggle ui-corner-right" role="button" data-dashlane-label="true" data-dashlane-rid="a9ea447d28e61422" data-form-type="other"><span class="ui-button-icon ui-icon ui-icon-triangle-1-s"></span><span class="ui-button-icon-space"> </span></a></span>
                        </div>
                    </div>
                    <p class="error_delivery_address" style="color: red;font-size: larger;font-weight: bold;display: none">
                        {{ 'front.shopping.error_delivery_address'|trans }}
                    </p>
                </div>

                <div class="ec-orderAccount  ">
                    <div class=" date_picker_row ">
                        <div class="shipping_destination_left date_picker_delivery">
                            <div> {{ 'front.shopping.date_picker_delivery'|trans }}</div>
                        </div>
                        <div class="shipping_destination_right">
                            <div class="shipping_row">
                                <div class="date_picker_delivery">
                                    <div class="controls" id="date_picker_delivery_p" style="position: relative">
                                        <input type="text" readonly='true'
                                               id="date_picker_delivery" name="date_picker_delivery"
                                               class="datetimepicker-input form-control" data-target="#date_picker_delivery"
                                               data-toggle="datetimepicker"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="date_picker_row">
                        <div class="shipping_destination_left"></div>
                        <div>
                            <p class="date-picker-delivery-notify">倉庫状況によりご希望日に添えない場合がございます<br/>詳しくは各担当者までお問い合わせください<br/>配送確定はマイページの出荷履歴をご確認ください</p>
                            <p class="error_date" style="color: red;font-size: larger;font-weight: bold;"></p>
                        </div>
                    </div>
                </div>

                <div class="ec-orderPayment  hidden nvtrong">
                    <div class="ec-rectHeading">
                        <h2>{{ 'front.shopping.payment_info'|trans }}</h2>
                    </div>
                    <div class="ec-radio">
                        {% for key, child in form.Payment %}
                            <div style="display: block;">
                                {% set Payment = form.Payment.vars.choices[key].data %}
                                {{ form_widget(child, { 'attr': { 'data-trigger': 'change' }}) }}
                                {% if Payment.payment_image is not null %}
                                    <p><img src="{{ asset(Payment.payment_image, 'save_image') }}"></p>
                                {% endif %}
                            </div>
                        {% endfor %}
                    </div>
                    <div class="ec-input {{ has_errors(form.Payment) ? ' error' }}">{{ form_errors(form.Payment) }}</div>
                </div>

                {% if BaseInfo.isOptionPoint and Order.Customer is not null %}
                    <div class="ec-orderPayment hidden nvtrong">
                        <div class="ec-rectHeading">
                            <h2>{{ 'front.shopping.point_info'|trans }}</h2>
                        </div>
                        <div class="ec-input {{ has_errors(form.use_point) ? ' error' }}">
                            <p>{{ 'front.shopping.available_point'|trans({ '%point%': Order.Customer.Point|number_format }) }}</p>
                            {{ form_widget(form.use_point, { 'attr': { 'type': 'text', 'class': 'form-control', 'data-trigger': 'change' }}) }}
                            {{ form_errors(form.use_point) }}
                        </div>
                    </div>
                {% endif %}

                <div class="ec-orderConfirm nvtrong hidden">
                    <div class="ec-rectHeading">
                        <h2>{{ 'front.shopping.message_info'|trans }}</h2>
                    </div>
                    <div class="ec-input ">
                        {{ form_widget(form.message, {'attr': {'class': 'form-control', 'placeholder': 'front.shopping.message_placeholder'|trans, 'rows': '6'}}) }}
                        {{ form_errors(form.message) }}
                    </div>
                </div>

                {#Customer Order No#}
                <div>
                    <div class="col-md-12" style="display: inline-flex; padding: 0; margin-bottom: 10px">
                        <div class="shipping_destination_left">
                            <div style="background-color: #ffdc00; font-weight: bold">客先発注番号</div>
                        </div>
                        <div class="col-md-12" style="padding: 0">
                            <input type="text" class="form-control" name="customer_order_no" id="customer_order_no" value="{% if customer_order_no is defined %}{{ customer_order_no }}{% endif %}" onkeyup="checkOrderNoExisted(this)" maxlength="20">
                        </div>
                    </div>
                    <p class="error_customer_order_no" style="color: red; font-size: larger; font-weight: bold; display: none">
                        客先注文番号がすでに登録されています
                    </p>
                </div>
                {#Customer Order No#}

                {# Remarks #}
                <div style="padding-top: 15px;">
                    <p>
                        <span>▼</span>
                        出荷案内書と納品書の備考に表示される項目（店名、オーダー番号、その他）
                    </p>
                </div>
                <div class="col-md-12" style="display: inline-flex; padding: 0; margin-bottom: 10px">
                    <div class="shipping_destination_left">
                        <div>発注書備考</div>
                    </div>
                    <div class="col-md-12" style="padding: 0">
                        <input type="text" class="form-control" name="remarks3" id="remarks3" value="{% if Order.moreOrder is defined %}{{ Order.moreOrder.remarks3 }}{% endif %}" onkeyup="updateTempOrder(this)">
                    </div>
                </div>

                <div>
                    <p>
                        <span>▼</span>
                        発注に対するコメント
                    </p>
                </div>
                <div class="col-md-12" style="display: inline-flex; padding: 0; margin-bottom: 10px">
                    <div class="shipping_destination_left">
                        <div>発注書コメント</div>
                    </div>
                    <div class="col-md-12" style="padding: 0">
                        <input type="text" class="form-control" name="remarks4" id="remarks4" value="{% if Order.moreOrder is defined %}{{ Order.moreOrder.remarks4 }}{% endif %}" onkeyup="updateTempOrder(this)">
                    </div>
                </div>

                <div>
                    <p>
                        <span>▼</span>
                        生産依頼項目（特注の仕様など）
                    </p>
                </div>
                <div class="col-md-12" style="display: inline-flex; padding: 0; margin-bottom: 10px">
                    <div class="shipping_destination_left">
                        <div> {{ 'front.shopping.remarks'|trans }}１</div>
                    </div>
                    <div class="col-md-12" style="padding: 0">
                        <input type="text" class="form-control" name="remarks1" id="remarks1" value="{% if Order.moreOrder is defined %}{{ Order.moreOrder.remarks1 }}{% endif %}" onkeyup="updateTempOrder(this)">
                    </div>
                </div>
                <div class="col-md-12" style="display: inline-flex; padding: 0; margin-top: 10px">
                    <div class="shipping_destination_left">
                        <div> {{ 'front.shopping.remarks'|trans }}２</div>
                    </div>
                    <div class="col-md-12" style="padding: 0">
                        <input type="text" class="form-control" name="remarks2" id="remarks2" value="{% if Order.moreOrder is defined %}{{ Order.moreOrder.remarks2 }}{% endif %}" onkeyup="updateTempOrder(this)">
                    </div>
                </div>
                {# End - Remarks#}
            </div>

            <div class="ec-orderRole__summary">
                <div class="ec-totalBox">
                    <dl class="ec-totalBox__spec">
                        <dt>{{ 'common.subtotal' | trans }}</dt>
                        {# Check mst_customer.price_view_flg #}
                        {% if global_service.getPriceViewFlg %}
                            <dd class="ec-totalBox__specTotal">{{ roundPriceZeroTotal(Order.subtotal) | raw }}</dd>
                        {% endif %}
                    </dl>
                    <dl class="ec-totalBox__spec">
                        <dt>{{ 'common.tax'  | trans }}</dt>
                        {# Check mst_customer.price_view_flg #}
                        {% if global_service.getPriceViewFlg %}
                            <dd>{{ roundPriceZeroTax(Order.tax) | raw }}</dd>
                        {% endif %}
                    </dl>
                    <dl class="ec-totalBox__spec hide">
                        <dt>{{ 'common.delivery_fee' | trans }}</dt>
                        {# Check mst_customer.price_view_flg #}
                        {% if global_service.getPriceViewFlg %}
                            <dd>{{ roundPrice(Order.deliveryFeeTotal) | raw }}</dd>
                        {% endif %}
                    </dl>
                    <div class="ec-totalBox__total">{{ 'common.total' | trans }}
                        {# Check mst_customer.price_view_flg #}
                        {% if global_service.getPriceViewFlg %}
                            <span class="ec-totalBox__price">{{ roundPriceZeroTotalAll(Order.payment_total) | raw }}</span>
                            <span class="ec-totalBox__taxLabel">{{ 'common.tax_include' | trans }}</span>
                        {% endif %}
                    </div>
                    <dl class="ec-totalBox__taxRate hidden">
                        <dt>{{ 'common.tax_rate_target' | trans({ '%rate%': Order.rate }) }}</dt>
                        {# Check mst_customer.price_view_flg #}
                        {% if global_service.getPriceViewFlg %}
                            <dd>{{ roundPriceZeroTotalAll(Order.total) | raw }}</dd>
                        {% endif %}
                    </dl>
                    <div class="ec-totalBox__paymentTotal hidden">
                        {{ 'common.payment_total' | trans }}
                        {# Check mst_customer.price_view_flg #}
                        {% if global_service.getPriceViewFlg %}
                            <span class="ec-totalBox__price">
                                {{ roundPriceZeroTotalAll(Order.payment_total) | raw }}
                            </span>
                            {% if roundPriceZeroTotal(Order.payment_total) != "" %}
                                <span class="ec-totalBox__taxLabel">
                                    {{ 'common.tax_include'|trans }}
                                </span>
                            {% endif %}
                        {% endif %}
                    </div>
                    {% if BaseInfo.isOptionPoint and Order.Customer is not null %}
                        <div class="ec-totalBox__pointBlock">
                            <dl class="ec-totalBox__spec">
                                <dt>{{ 'front.shopping.use_point'|trans }}</dt>
                                <dd>{{ Order.UsePoint|number_format }} pt</dd>
                            </dl>
                            <dl class="ec-totalBox__spec">
                                <dt><span class="ec-font-bold">{{ 'front.shopping.add_point'|trans }}</span></dt>
                                <dd><span class="ec-font-bold">{{ Order.AddPoint|number_format }} pt</span></dd>
                            </dl>
                        </div>
                    {% endif %}
                    <div class="ec-totalBox__btn">
                        <button type="button" class="ec-blockBtn--action mySubmitConfirm">{{ 'front.shopping.go_to_confirm'|trans }}</button>
                        <a href="{{ url("cart") }}" class="ec-blockBtn--cancel">{{ 'front.shopping.back_to_cart'|trans }}</a>
                    </div>
                </div>
            </div>
        </div>
    </form>
{% endblock %}
