{#
This file is part of EC-CUBE

Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.

http://www.ec-cube.co.jp/

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}
{% extends 'default_frame.twig' %}

{% set mypageno = 'delivery' %}

{% set body_class = 'mypage' %}

{% block stylesheet %}
    <link rel="stylesheet" href="{{ asset('assets/css/bootstrap-multiselect.min.css') }}">
{% endblock stylesheet %}

{% block main %}
    <style>
        div.multiselect-container.dropdown-menu {
            color: black;
        }
        div.open>.dropdown-menu {
            display: inline-grid;
        }
        .dropdown-item.multiselect-all {
            width: 100%;
            border: none;
            padding-bottom: 5px;
        }
        .multiselect-option.dropdown-item {
            width: 100%;
            border: none;
        }
        .multiselect-container .multiselect-all .form-check {
            float: left;
            /*padding: 0 5px 0 45px;*/
        }
        .multiselect-container .multiselect-option .form-check {
            float: left;
        }
        .multiselect-container .multiselect-all .form-check .form-check-label {
            margin-left: 10px;
        }
        .multiselect-container .multiselect-option .form-check .form-check-label {
            margin-left: 10px;
        }
        button.multiselect.dropdown-toggle.custom-select.text-center {
            height: 34px;
        }
        div.multiselect-filter.d-flex.align-items-center {
            width: 100%;
            display: inline-flex;
        }
        div.multiselect-filter.d-flex.align-items-center i {
            display: inline-flex;
            margin-top: 10px;
        }
        button.multiselect {
            display: none;
        }
    </style>

    <div class="ec-layoutRole__main">
        <div class="ec-mypageRole">
            <div class="ec-pageHeader">
                <h1>{{ 'front.mypage.title'|trans }}/{{ 'front.mypage.nav_order__history'|trans }}</h1>
            </div>
            {% include 'Mypage/navi.twig' %}
        </div>

        <style>
            .myTable>thead>tr>th {
                white-space: nowrap;
            }
        </style>

        <iframe id="my_iframe" style="display:none;"></iframe>
        <script>
            function Download(url) {
                document.getElementById('my_iframe').src = url;
            };
        </script>

        <style>
            .disBg {
                background: #A7A7A7;
                border-color: #A7A7A7;
            }
            .actBg {
                background: #0065ff;
            }
        </style>

        <div class="ec-mypageRole">
            {% if pagination.totalItemCount > 0 %}
                <p class="ec-para-normal">{{ 'front.mypage.history_count'|trans({'%count%':pagination.totalItemCount}) }}</p>
            {% endif %}

            <table class="table myTable">
                <thead>
                <tr>
                    <th title="delivery_no">{{ 'front.mypage.shipping.note_no'|trans| raw }}</th>
                    <th title="shipping_date">
                        {{ 'front.mypage.shipping.date'|trans| raw }}
                        <a href="javascript:void(0)" style="color: red;" class="multiselect dropdown-toggle search_shipping_date">
                            <span class="glyphicon glyphicon-triangle-bottom"></span>
                        </a>
                        <br/>
                        <select id="search_shipping_date" name="search_shipping_date" multiple="multiple" onchange="handleSearch(this)">
                            {% for shippingDate in shippingDateOpt %}
                                <option value="{{shippingDate.key}}">{{shippingDate.value}}</option>
                            {% endfor %}
                        </select>
                    </th>
                    <th title="shipping_code otodoke_code" style="min-width: 150px">
                        {{ 'front.mypage.shipping_code'|trans| raw }}
                        <a href="javascript:void(0)" style="color: red; {% if orderShippingOpt|length < 2 %} visibility: hidden; {% endif %}" class="multiselect dropdown-toggle search_order_shipping" onclick="handleGetLastSelected()">
                            <span class="glyphicon glyphicon-triangle-bottom"></span>
                        </a>
                        <br/>
                        <select id="search_order_shipping" name="search_order_shipping" multiple="multiple" onchange="handleSearch(this)">
                            {% for orderShipping in orderShippingOpt %}
                                <option value="{{orderShipping.key}}">{{orderShipping.value}}</option>
                            {% endfor %}
                        </select>
                        <input type="text" value="" id="last_order_shipping" hidden>
                        <br/>
                        {{ 'front.mypage.otodoke_code'|trans| raw }}
                        <a href="javascript:void(0)" style="color: red; {% if orderOtodokeOpt|length < 2 %} visibility: hidden; {% endif %}" class="multiselect dropdown-toggle search_order_otodoke">
                            <span class="glyphicon glyphicon-triangle-bottom"></span>
                        </a>
                        <br/>
                        <select id="search_order_otodoke" name="search_order_otodoke" multiple="multiple" onchange="handleSearch(this)">
                            {% for orderOtodoke in orderOtodokeOpt %}
                                <option value="{{orderOtodoke.key}}">{{orderOtodoke.value}}</option>
                            {% endfor %}
                        </select>
                    </th>
                    <th title="shipping_no">{{ 'front.mypage.shipping.delivery_no'|trans| raw }}</th>
                </tr>
                </thead>
                {% if pagination.totalItemCount > 0 %}
                    <tbody>
                    {% for Order in pagination %}
                        <tr>
                            <td>{{Order.delivery_no}}</td>
                            <td>{{Order.shipping_date}}</td>
                            <td>
                                {{Order.shiping_name}}<br/>
                                {{Order.otodoke_name}}
                            </td>
                            <td>
                                <a href="/mypage/shipping/history?shipping_no={{Order.shipping_no}}" target="_blank">
                                    {{Order.shipping_no}}
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>

                {% else %}
                    <tbody>
                    <tr>
                        <td colspan="4">
                            <p>{{ 'front.mypage.history_not_found'|trans }}</p>
                        </td>
                    </tr>
                    </tbody>
                {% endif %}
            </table>

            {% if pagination.totalItemCount > 0 %}
                <div class="ec-pagerRole">
                    {% include "pager.twig" with {'pages': pagination.paginationData} %}
                </div>
            {% endif %}
        </div>

        {% include "Mypage/modal_list.twig" with {'shipping_no':'Test' } %}
    </div>
{% endblock %}

{% block javascript %}
<script src="{{ asset('assets/js/bootstrap-multiselect.min.js') }}"></script>

    <script>
        $('#search_shipping_date').multiselect({
            includeSelectAllOption: true,
            selectAllText: 'すべて',
            enableFiltering: true,
            filterPlaceholder: '検索',
            checkboxName: function(option) {
                return 'multiselect[]';
            },
            buttonWidth: '150px',
            buttonHeight: '34px',
            buttonText: function(options, select) {
                if (options.length === 0) {
                    return '未選択';
                }
                else if (options.length == 14) {
                    return 'すべて';
                }
                else if (options.length > 2) {
                    return options.length + 'ヶ月選択済み';
                }
                else {
                     var labels = [];
                     options.each(function() {
                         if ($(this).attr('label') !== undefined) {
                             labels.push($(this).attr('label'));
                         }
                         else {
                             labels.push($(this).html());
                         }
                     });
                     labels.reverse();
                     return labels.join(', ') + '';
                }
            },
            buttonTitle: function(options, select) {
                if (options.length === 0) {
                    return '未選択';
                }
                else {
                     var labels = [];
                     options.each(function() {
                         if ($(this).attr('label') !== undefined) {
                             labels.push($(this).attr('label'));
                         }
                         else {
                             labels.push($(this).html());
                         }
                     });
                     labels.reverse();
                     return labels.join(', ') + '';
                }
            },
            buttonClass:'search_shipping_date',
            nonSelectedText: '注文日検索',
        });

        $('#search_order_shipping').multiselect({
            // includeSelectAllOption: true,
            // selectAllText: 'すべて',
            enableFiltering: true,
            filterPlaceholder: '検索',
            disableIfEmpty: true,
            checkboxName: function(option) {
                return 'multiselect[]';
            },
            buttonWidth: '150px',
            buttonHeight: '34px',
            buttonText: function(options, select) {
                if (options.length === 0) {
                    return '未選択';
                }
                else if (options.length == 14) {
                    return 'すべて';
                }
                else if (options.length > 2) {
                    return options.length + 'ヶ月選択済み';
                }
                else {
                     var labels = [];
                     options.each(function() {
                         if ($(this).attr('label') !== undefined) {
                             labels.push($(this).attr('label'));
                         }
                         else {
                             labels.push($(this).html());
                         }
                     });
                     labels.reverse();
                     return labels.join(', ') + '';
                }
            },
            buttonTitle: function(options, select) {
                if (options.length === 0) {
                    return '未選択';
                }
                else {
                     var labels = [];
                     options.each(function() {
                         if ($(this).attr('label') !== undefined) {
                             labels.push($(this).attr('label'));
                         }
                         else {
                             labels.push($(this).html());
                         }
                     });
                     labels.reverse();
                     return labels.join(', ') + '';
                }
            },
            buttonClass:'search_order_shipping',
            nonSelectedText: '注文日検索',
        });

        $('#search_order_otodoke').multiselect({
            includeSelectAllOption: true,
            selectAllText: 'すべて',
            enableFiltering: true,
            filterPlaceholder: '検索',
            disableIfEmpty: true,
            checkboxName: function(option) {
                return 'multiselect[]';
            },
            buttonWidth: '150px',
            buttonHeight: '34px',
            buttonText: function(options, select) {
                if (options.length === 0) {
                    return '未選択';
                }
                else if (options.length == 14) {
                    return 'すべて';
                }
                else if (options.length > 2) {
                    return options.length + 'ヶ月選択済み';
                }
                else {
                     var labels = [];
                     options.each(function() {
                         if ($(this).attr('label') !== undefined) {
                             labels.push($(this).attr('label'));
                         }
                         else {
                             labels.push($(this).html());
                         }
                     });
                     labels.reverse();
                     return labels.join(', ') + '';
                }
            },
            buttonTitle: function(options, select) {
                if (options.length === 0) {
                    return '未選択';
                }
                else {
                     var labels = [];
                     options.each(function() {
                         if ($(this).attr('label') !== undefined) {
                             labels.push($(this).attr('label'));
                         }
                         else {
                             labels.push($(this).html());
                         }
                     });
                     labels.reverse();
                     return labels.join(', ') + '';
                }
            },
            buttonClass:'search_order_otodoke',
            nonSelectedText: '注文日検索',
        });

        /*Set default value for selected*/
         let search_shipping_date  = '{{ search_shipping_date }}';
         search_shipping_date      = search_shipping_date.split(",");
         $.each(search_shipping_date, function(key, value) {
            $('#search_shipping_date').multiselect('select', [value]);
         });

         let search_order_shipping  = '{{ search_order_shipping }}';
         search_order_shipping      = search_order_shipping.split(",");
         $.each(search_order_shipping, function(key, value) {
            $('#search_order_shipping').multiselect('select', [value]);
         });

         let search_order_otodoke  = '{{ search_order_otodoke }}';
         search_order_otodoke      = search_order_otodoke.split(",");
         $.each(search_order_otodoke, function(key, value) {
            $('#search_order_otodoke').multiselect('select', [value]);
         });

        var typingTimer;
        var doneTypingInterval      = 2000;

        function handleSearch(target) {
            let name                = target.name;
            let value               = target.value;
            let origin              = window.location.origin;
            let pathname            = window.location.pathname;
            let search              = window.location.search;
            pathname                += "?pageno=1";

            if (name == 'search_shipping_date') {
                clearTimeout(typingTimer);
                loadingOverlay('hide');

                typingTimer         = setTimeout(function () {
                    loadingOverlay();
                    handelChangeDate(origin, pathname, search);
                }, doneTypingInterval);
            }

            if (name == 'search_order_shipping') {
                loadingOverlay();
                let previousSelected    = $("input#last_order_shipping").val();
                let lastSelected        = $("#search_order_shipping option:selected").last().val();

                if (value == previousSelected) {
                    value               = lastSelected;
                }

                $('#search_order_shipping').multiselect('deselectAll');

                setTimeout(function () {
                    $('#search_order_shipping').multiselect('select', value);
                    handelChangeShipping(origin, pathname);
                }, 200);
            }

            if (name == 'search_order_otodoke') {
                clearTimeout(typingTimer);
                loadingOverlay('hide');

                typingTimer         = setTimeout(function () {
                    loadingOverlay();
                    handelChangeOtodoke(origin, pathname, search);
                }, doneTypingInterval);
            }
        }

        function handleGetLastSelected() {
            let lastSelected        = $("#search_order_shipping option:selected").last().val();
            if (lastSelected) {
                $("input#last_order_shipping").val(lastSelected);
            }

            else {
                $("input#last_order_shipping").val('');
            }
        }

        function handelChangeDate(origin, pathname, search) {
            let value       = $("#search_shipping_date").val();
            $.each(value, function(key, item) {
                pathname    += "&shipping_date[]=" + item;
            });
            window.location.href     = origin + pathname;
        }

        function handelChangeShipping(origin, pathname) {
            let value       = $("#search_order_shipping").val();
            $.each(value, function(key, item) {
                pathname    += "&order_shipping[]=" + item;
            });
            window.location.href     = origin + pathname;
        }

        function handelChangeOtodoke(origin, pathname, search) {
            let value           = $("#search_order_otodoke").val();
            let shipping_code   = $("#search_order_shipping option:selected").last().val();
            pathname            += "&order_shipping[]=" + shipping_code;

            $.each(value, function(key, item) {
                pathname        += "&order_otodoke[]=" + item;
            });
            window.location.href     = origin + pathname;
        }

        $("a.multiselect.dropdown-toggle.search_shipping_date").on("click", function() {
            let button          = $("button.search_shipping_date");
            let aria_expanded   = button.attr("aria-expanded");
            if (!aria_expanded || aria_expanded == 'false') {
                setTimeout(function() {
                    button.click();
                }, 100);
            }
        })

        $("a.multiselect.dropdown-toggle.search_order_shipping").on("click", function() {
            let button          = $("button.search_order_shipping");
            let aria_expanded   = button.attr("aria-expanded");
            if (!aria_expanded || aria_expanded == 'false') {
                setTimeout(function() {
                    button.click();
                }, 100);
            }
        })

        $("a.multiselect.dropdown-toggle.search_order_otodoke").on("click", function() {
            let button          = $("button.search_order_otodoke");
            let aria_expanded   = button.attr("aria-expanded");
            if (!aria_expanded || aria_expanded == 'false') {
                setTimeout(function() {
                    button.click();
                }, 100);
            }
        })
    </script>
{% endblock %}
